stages:
  - "Docker images"
  - Build
  - Test
  - Package
  - Deploy

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  IMAGE_ID: $GITLAB_USER_LOGIN-$CI_COMMIT_REF_NAME

ubuntu-x86-image:
  stage: "Docker images"
  tags:
    - docker-host
    - ircbot
    - x86_64
  script:
    - cd docker/ubuntu
    - docker build -t docker.kolk.cc/ircbot-ubuntu:$IMAGE_ID .
    - docker push docker.kolk.cc/ircbot-ubuntu:$IMAGE_ID

debian-x86-image:
  stage: "Docker images"
  tags:
    - docker-host
    - ircbot
    - x86_64
  script:
    - cd docker/debian
    - docker build -t docker.kolk.cc/ircbot-debian:$IMAGE_ID .
    - docker push docker.kolk.cc/ircbot-debian:$IMAGE_ID

fedora-x86-image:
  stage: "Docker images"
  tags:
    - docker-host
    - ircbot
    - x86_64
  script:
    - cd docker/fedora
    - docker build -t docker.kolk.cc/ircbot-fedora:$IMAGE_ID .
    - docker push docker.kolk.cc/ircbot-fedora:$IMAGE_ID

debian-arm-image:
  stage: "Docker images"
  tags:
    - docker-host
    - ircbot
    - arm
  script:
    - cd docker/debian-arm
    - docker build -t docker.kolk.cc/ircbot-arm-debian:$IMAGE_ID .
    - docker push docker.kolk.cc/ircbot-arm-debian:$IMAGE_ID

ubuntu-arm-image:
  stage: "Docker images"
  tags:
    - docker-host
    - ircbot
    - arm
  script:
    - cd docker/ubuntu-arm
    - docker build -t docker.kolk.cc/ircbot-arm-ubuntu:$IMAGE_ID .
    - docker push docker.kolk.cc/ircbot-arm-ubuntu:$IMAGE_ID

build:
  image: docker.kolk.cc/ircbot-debian:$IMAGE_ID
  stage: Build
  tags:
    - docker
    - ircbot
    - x86_64
    - docker
  script:
    - mkdir build
    - cd build
    - cmake -G 'Unix Makefiles' -DCMAKE_BUILD_TYPE=Debug ..
    - make -j $(nproc)
    - mkdir install_root
    - make DESTDIR=./install_root install
    - tar cJf ../ubuntu1604-ircbot-binary.tar.xz ./install_root/*
    - cd ..
    - tar cJf ubuntu1604-build.tar.xz ./build
    - cp build/version-info .
  artifacts:
    paths:
      - ubuntu1604-ircbot-binary.tar.xz
      - ubuntu1604-build.tar.xz
      - version-info

docs:
  image: docker.kolk.cc/ircbot-ubuntu:$IMAGE_ID
  stage: Build
  tags:
    - docker
    - ircbot
    - x86_64
  script:
    - mkdir build
    - cd build
    - cmake ..
    - make docs
    - tar cJf ../docs.tar.xz docs
  artifacts:
    paths:
      - docs.tar.xz

test:
  image: docker.kolk.cc/ircbot-debian:$IMAGE_ID
  stage: Test
  tags:
    - docker
    - ircbot
    - x86_64
  script:
    - tar xf ubuntu1604-build.tar.xz
    - ls -la .
    - ls -la build
    - cd build
    - ctest

deb:ubuntu:
  image: docker.kolk.cc/ircbot-ubuntu:$IMAGE_ID
  stage: Package
  only:
    - tags
  tags:
    - docker
    - ircbot
    - x86_64
  script:
    - export IRCBOT_VERSION=$(cat version-info)
    - export GIT_COMMIT=${CI_COMMIT_SHA}
    - export GIT_REF=${CI_COMMIT_REF_NAME}
    - env
    - ./packaging/scripts/deb.sh ubuntu
  artifacts:
    paths:
      - "packages/ubuntu/*.deb"

deb:debian:
  image: docker.kolk.cc/ircbot-debian:$IMAGE_ID
  stage: Package
  only:
    - tags
  tags:
    - docker
    - ircbot
    - x86_64
  script:
    - export IRCBOT_VERSION=$(cat version-info)
    - export GIT_COMMIT=${CI_COMMIT_SHA}
    - export GIT_REF=${CI_COMMIT_REF_NAME}
    - env
    - ./packaging/scripts/deb.sh debian
  artifacts:
    paths:
      - "packages/debian/*.deb"

deb:ubuntu-arm:
  image: docker.kolk.cc/ircbot-arm-ubuntu:$IMAGE_ID
  stage: Package
  only:
    - tags
  tags:
    - docker
    - ircbot
    - arm
  script:
    - export IRCBOT_VERSION=$(cat version-info)
    - export GIT_COMMIT=${CI_COMMIT_SHA}
    - export GIT_REF=${CI_COMMIT_REF_NAME}
    - env
    - ./packaging/scripts/deb.sh ubuntu
  artifacts:
    paths:
      - "packages/ubuntu/*.deb"

deb:debian-arm:
  image: docker.kolk.cc/ircbot-arm-debian:$IMAGE_ID
  stage: Package
  only:
    - tags
  tags:
    - docker
    - ircbot
    - arm
  script:
    - export IRCBOT_VERSION=$(cat version-info)
    - export GIT_COMMIT=${CI_COMMIT_SHA}
    - export GIT_REF=${CI_COMMIT_REF_NAME}
    - env
    - ./packaging/scripts/deb.sh debian
  artifacts:
    paths:
      - "packages/debian/*.deb"

rpm:fedora:
  image: docker.kolk.cc/ircbot-fedora:$IMAGE_ID
  stage: Package
  only:
    - tags
  tags:
    - docker
    - ircbot
    - x86_64
  script:
    - export IRCBOT_VERSION=$(cat version-info)
    - export GIT_COMMIT=${CI_COMMIT_SHA}
    - export GIT_REF=${CI_COMMIT_REF_NAME}
    - env
    - ./packaging/scripts/rpm.sh fedora
  artifacts:
    paths:
      - "packages/fedora/*.rpm"

deploy:ubuntu:
  image: ubuntu:16.04
  stage: Deploy
  only:
    - tags
  tags:
    - docker
    - ircbot
    - x86_64
  script:
    - export IRCBOT_VERSION=$(cat version-info)
    - echo ${IRCBOT_VERSION}
    - apt update
    - apt install -y ./packages/ubuntu/ircbot_${IRCBOT_VERSION}*amd64.deb
    - ircbot -v

deploy:debian:
  image: debian:9.3
  stage: Deploy
  only:
    - tags
  tags:
    - docker
    - ircbot
    - x86_64
  script:
    - export IRCBOT_VERSION=$(cat version-info)
    - echo ${IRCBOT_VERSION}
    - apt update
    - apt install -y ./packages/debian/ircbot_${IRCBOT_VERSION}*amd64.deb
    - ircbot -v

deploy:fedora:
  image: fedora:27
  stage: Deploy
  only:
    - tags
  tags:
    - docker
    - ircbot
    - x86_64
  script:
    - export IRCBOT_VERSION=$(cat version-info)
    - echo ${IRCBOT_VERSION}
    - yum install -y ./packages/fedora/ircbot-${IRCBOT_VERSION}*.x86_64.rpm
    - ircbot -v

deploy:ubuntu-arm:
  image: arm32v7/ubuntu:16.04
  stage: Deploy
  only:
    - tags
  tags:
    - docker
    - ircbot
    - arm
  script:
    - export IRCBOT_VERSION=$(cat version-info)
    - echo ${IRCBOT_VERSION}
    - apt update
    - apt install -y ./packages/ubuntu/ircbot_${IRCBOT_VERSION}*armhf.deb
    - ircbot -v

deploy:debian-arm:
  image: arm32v7/debian:9.3
  stage: Deploy
  only:
    - tags
  tags:
    - docker
    - ircbot
    - arm
  script:
    - export IRCBOT_VERSION=$(cat version-info)
    - echo ${IRCBOT_VERSION}
    - apt update
    - apt install -y ./packages/debian/ircbot_${IRCBOT_VERSION}*armhf.deb
    - ircbot -v
